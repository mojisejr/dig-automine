/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockDigDragonMine,
  MockDigDragonMineInterface,
} from "../../../contracts/mocks/MockDigDragonMine";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_isActive",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [],
    name: "earnReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getStakedTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isActive",
        type: "bool",
      },
    ],
    name: "setActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bec380380610bec83398101604081905261002f9161007e565b600061003b83826101e4565b506001805460ff1916911515919091179055506102a2565b634e487b7160e01b600052604160045260246000fd5b8051801515811461007957600080fd5b919050565b6000806040838503121561009157600080fd5b82516001600160401b038111156100a757600080fd5b8301601f810185136100b857600080fd5b80516001600160401b038111156100d1576100d1610053565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100ff576100ff610053565b60405281815282820160200187101561011757600080fd5b60005b828110156101365760208185018101518383018201520161011a565b5060006020838301015280945050505061015260208401610069565b90509250929050565b600181811c9082168061016f57607f821691505b60208210810361018f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101df57806000526020600020601f840160051c810160208510156101bc5750805b601f840160051c820191505b818110156101dc57600081556001016101c8565b50505b505050565b81516001600160401b038111156101fd576101fd610053565b6102118161020b845461015b565b84610195565b6020601f821160018114610245576000831561022d5750848201515b600019600385901b1c1916600184901b1784556101dc565b600084815260208120601f198516915b828110156102755787850151825560209485019460019092019101610255565b50848210156102935786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b61093b806102b16000396000f3fe6080604052600436106100a05760003560e01c806363c28db11161006457806363c28db114610187578063acec338a146101b4578063e449f341146101e2578063e81c712714610202578063f40f0f5214610230578063f8140e791461025257600080fd5b806306fdde03146100ac5780630fbf0a93146100d7578063150b7a02146100f957806322f3e2d41461013d578063293be4561461016757600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100c1610267565b6040516100ce919061059a565b60405180910390f35b3480156100e357600080fd5b506100f76100f23660046105e8565b6102f5565b005b34801561010557600080fd5b50610124610114366004610691565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016100ce565b34801561014957600080fd5b506001546101579060ff1681565b60405190151581526020016100ce565b34801561017357600080fd5b506100f7610182366004610775565b600255565b34801561019357600080fd5b506101a76101a236600461078e565b610393565b6040516100ce91906107b0565b3480156101c057600080fd5b506100f76101cf3660046107f3565b6001805460ff1916911515919091179055565b3480156101ee57600080fd5b506100f76101fd3660046105e8565b6103ff565b34801561020e57600080fd5b5061022261021d366004610815565b61052f565b6040519081526020016100ce565b34801561023c57600080fd5b5061022261024b36600461078e565b5060025490565b34801561025e57600080fd5b506100f7610560565b600080546102749061083f565b80601f01602080910402602001604051908101604052809291908181526020018280546102a09061083f565b80156102ed5780601f106102c2576101008083540402835291602001916102ed565b820191906000526020600020905b8154815290600101906020018083116102d057829003601f168201915b505050505081565b60005b8181101561034b5733600090815260036020526040902083838381811061032157610321610879565b835460018082018655600095865260209586902092909502939093013592019190915550016102f8565b50336001600160a01b03167f134b166c6094cc1ccbf1e3353ce5c3cd9fd29869051bdb999895854d77cc5ef6838360405161038792919061088f565b60405180910390a25050565b6001600160a01b0381166000908152600360209081526040918290208054835181840281018401909452808452606093928301828280156103f357602002820191906000526020600020905b8154815260200190600101908083116103df575b50505050509050919050565b336000908152600360205260408120905b828110156104e65760005b82548110156104dd5784848381811061043657610436610879565b9050602002013583828154811061044f5761044f610879565b9060005260206000200154036104d5578254839061046f906001906108c8565b8154811061047f5761047f610879565b906000526020600020015483828154811061049c5761049c610879565b9060005260206000200181905550828054806104ba576104ba6108ef565b600190038181906000526020600020016000905590556104dd565b60010161041b565b50600101610410565b50336001600160a01b03167f20748b935fd9f21155c2e98cb2bd5df6fe86f21b193cebaae8d9ad7db0ba5416848460405161052292919061088f565b60405180910390a2505050565b6003602052816000526040600020818154811061054b57600080fd5b90600052602060002001600091509150505481565b60025460405190815233907f53dc38108cf785fe55673a03f8e69acfbbb6a732c36ed6d93b2aee1a7555a4979060200160405180910390a2565b602081526000825180602084015260005b818110156105c857602081860181015160408684010152016105ab565b506000604082850101526040601f19601f83011684010191505092915050565b600080602083850312156105fb57600080fd5b823567ffffffffffffffff81111561061257600080fd5b8301601f8101851361062357600080fd5b803567ffffffffffffffff81111561063a57600080fd5b8560208260051b840101111561064f57600080fd5b6020919091019590945092505050565b80356001600160a01b038116811461067657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156106a757600080fd5b6106b08561065f565b93506106be6020860161065f565b925060408501359150606085013567ffffffffffffffff8111156106e157600080fd5b8501601f810187136106f257600080fd5b803567ffffffffffffffff81111561070c5761070c61067b565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561073b5761073b61067b565b60405281815282820160200189101561075357600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60006020828403121561078757600080fd5b5035919050565b6000602082840312156107a057600080fd5b6107a98261065f565b9392505050565b602080825282518282018190526000918401906040840190835b818110156107e85783518352602093840193909201916001016107ca565b509095945050505050565b60006020828403121561080557600080fd5b813580151581146107a957600080fd5b6000806040838503121561082857600080fd5b6108318361065f565b946020939093013593505050565b600181811c9082168061085357607f821691505b60208210810361087357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6020808252810182905260006001600160fb1b038311156108af57600080fd5b8260051b80856040850137919091016040019392505050565b818103818111156108e957634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603160045260246000fdfea264697066735822122021ded79cf21c22f3f9c4bde7c2295eb2bdcc451fb5f2127dec8d7765068967a964736f6c634300081b0033";

type MockDigDragonMineConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockDigDragonMineConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockDigDragonMine__factory extends ContractFactory {
  constructor(...args: MockDigDragonMineConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _isActive: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, _isActive, overrides || {});
  }
  override deploy(
    _name: string,
    _isActive: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _isActive, overrides || {}) as Promise<
      MockDigDragonMine & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockDigDragonMine__factory {
    return super.connect(runner) as MockDigDragonMine__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockDigDragonMineInterface {
    return new Interface(_abi) as MockDigDragonMineInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockDigDragonMine {
    return new Contract(address, _abi, runner) as unknown as MockDigDragonMine;
  }
}
