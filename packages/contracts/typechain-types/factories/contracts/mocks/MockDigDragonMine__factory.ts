/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockDigDragonMine,
  MockDigDragonMineInterface,
} from "../../../contracts/mocks/MockDigDragonMine";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [],
    name: "earnReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getStakedTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506107648061001f6000396000f3fe60806040526004361061007f5760003560e01c8063e449f3411161004e578063e449f34114610143578063e81c712714610163578063f40f0f5214610191578063f8140e79146101b357600080fd5b80630fbf0a931461008b578063150b7a02146100ad578063293be456146100f657806363c28db11461011657600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a636600461046d565b6101c8565b005b3480156100b957600080fd5b506100d86100c8366004610516565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561010257600080fd5b506100ab6101113660046105fa565b600055565b34801561012257600080fd5b50610136610131366004610613565b610266565b6040516100ed9190610635565b34801561014f57600080fd5b506100ab61015e36600461046d565b6102d2565b34801561016f57600080fd5b5061018361017e366004610678565b610402565b6040519081526020016100ed565b34801561019d57600080fd5b506101836101ac366004610613565b5060005490565b3480156101bf57600080fd5b506100ab610433565b60005b8181101561021e573360009081526001602052604090208383838181106101f4576101f46106a2565b835460018082018655600095865260209586902092909502939093013592019190915550016101cb565b50336001600160a01b03167f134b166c6094cc1ccbf1e3353ce5c3cd9fd29869051bdb999895854d77cc5ef6838360405161025a9291906106b8565b60405180910390a25050565b6001600160a01b0381166000908152600160209081526040918290208054835181840281018401909452808452606093928301828280156102c657602002820191906000526020600020905b8154815260200190600101908083116102b2575b50505050509050919050565b336000908152600160205260408120905b828110156103b95760005b82548110156103b057848483818110610309576103096106a2565b90506020020135838281548110610322576103226106a2565b9060005260206000200154036103a85782548390610342906001906106f1565b81548110610352576103526106a2565b906000526020600020015483828154811061036f5761036f6106a2565b90600052602060002001819055508280548061038d5761038d610718565b600190038181906000526020600020016000905590556103b0565b6001016102ee565b506001016102e3565b50336001600160a01b03167f20748b935fd9f21155c2e98cb2bd5df6fe86f21b193cebaae8d9ad7db0ba541684846040516103f59291906106b8565b60405180910390a2505050565b6001602052816000526040600020818154811061041e57600080fd5b90600052602060002001600091509150505481565b60005460405190815233907f53dc38108cf785fe55673a03f8e69acfbbb6a732c36ed6d93b2aee1a7555a4979060200160405180910390a2565b6000806020838503121561048057600080fd5b823567ffffffffffffffff81111561049757600080fd5b8301601f810185136104a857600080fd5b803567ffffffffffffffff8111156104bf57600080fd5b8560208260051b84010111156104d457600080fd5b6020919091019590945092505050565b80356001600160a01b03811681146104fb57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561052c57600080fd5b610535856104e4565b9350610543602086016104e4565b925060408501359150606085013567ffffffffffffffff81111561056657600080fd5b8501601f8101871361057757600080fd5b803567ffffffffffffffff81111561059157610591610500565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156105c0576105c0610500565b6040528181528282016020018910156105d857600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60006020828403121561060c57600080fd5b5035919050565b60006020828403121561062557600080fd5b61062e826104e4565b9392505050565b602080825282518282018190526000918401906040840190835b8181101561066d57835183526020938401939092019160010161064f565b509095945050505050565b6000806040838503121561068b57600080fd5b610694836104e4565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b6020808252810182905260006001600160fb1b038311156106d857600080fd5b8260051b80856040850137919091016040019392505050565b8181038181111561071257634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220fd560265ee8c4a1351c4e702cdd02e67f9c791805e537cd7902e4727eaa21a8964736f6c634300081b0033";

type MockDigDragonMineConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockDigDragonMineConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockDigDragonMine__factory extends ContractFactory {
  constructor(...args: MockDigDragonMineConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockDigDragonMine & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockDigDragonMine__factory {
    return super.connect(runner) as MockDigDragonMine__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockDigDragonMineInterface {
    return new Interface(_abi) as MockDigDragonMineInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockDigDragonMine {
    return new Contract(address, _abi, runner) as unknown as MockDigDragonMine;
  }
}
